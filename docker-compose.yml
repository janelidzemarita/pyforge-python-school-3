
services:
  web1:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      SERVER_ID: SERVER-1
      REDIS_HOST: redis   # Add Redis host
      REDIS_PORT: 6379    # Add Redis port
      DATABASE_URL: postgresql://postgres:password@postgres:5432/myMoleculeDB
    depends_on:
      - redis             # Ensure Redis starts before the web service
      - postgres
    ports:
      - "8080:8080"
    networks:
      - webnet

  web2:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      SERVER_ID: SERVER-2
      REDIS_HOST: redis   # Add Redis host
      REDIS_PORT: 6379    # Add Redis port
      DATABASE_URL: postgresql://postgres:password@postgres:5432/myMoleculeDB
    depends_on:
      - redis             # Ensure Redis starts before the web service
      - postgres
    ports:
        - "8082:8080"
    networks:
      - webnet

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - webnet

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myMoleculeDB
    ports:
      - "5432:5432"
    networks:
      - webnet

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.celery_worker.celery_app worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/myMoleculeDB
    volumes:
      - .:/app
    depends_on:
      - redis             # Ensure Redis starts before the Celery worker
      - postgres
    networks:
      - webnet

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web1
      - web2
    networks:
      - webnet

  test_postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test_myMoleculeDB  # Use a different database for testing
    ports:
      - "5433:5432"  # Expose on a different port
    networks:
      - webnet

  test_service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      TEST_DATABASE_URL: postgresql://postgres:password@test_postgres:5432/test_myMoleculeDB
    depends_on:
      - test_postgres
    networks:
      - webnet

networks:
  webnet:
